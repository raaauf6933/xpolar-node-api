// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum CommonStatus {
  ACT
  DEACT
}

enum CaseBatchStatus {
  SUCCESS
  UPLOADING
  FAILED
}

model client {
  id         Int          @id @default(autoincrement())
  name       String       @db.VarChar(255)
  code        Int        
  status     CommonStatus 
  isDeleted  Boolean      @default(false)
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  caseBatch case_batch[]
}

model case_batch {
  id        Int    @id @default(autoincrement())
  client    client @relation(fields: [clientId], references: [id])
  clientId Int
  batchReference String
  batchId String
  assignmentStartDate DateTime
  assignmentEndDate DateTime
  status CaseBatchStatus
  isDeleted  Boolean      @default(false)
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  cases cases[]
}

model cases {
  id Int    @id @default(autoincrement())
  caseBatch case_batch @relation(fields: [caseBatchId], references: [id])
  caseBatchId Int
  caseReference String
  clientReference String @default("")
  caseUniqueBatchId String
  person person @relation(fields: [personId], references: [id])
  personId Int
  isDeleted  Boolean      @default(false)
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
}

model person {
  id Int @id @default(autoincrement())
  cases cases[]
  contacts contacts[]
  address address[]
  firstName String
  lastName String
  birthDay String
  gender String
  isDeleted  Boolean      @default(false)
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt @default(now())
}


model contacts {
  id  Int    @id @default(autoincrement())
  person person @relation(fields: [personId], references: [id])
  personId Int
  type String
  contactValue String
  isDeleted  Boolean      @default(false)
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
}

model address {
  id  Int    @id @default(autoincrement())
  person person @relation(fields: [personId], references: [id])
  personId Int
  address String
  city String
  zipCode String
  region String
  isDeleted  Boolean      @default(false)
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
}

